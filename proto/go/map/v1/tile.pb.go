// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: map/v1/tile.proto

package mapv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Tile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Coordinate    *Tile_Coordinate       `protobuf:"bytes,1,opt,name=coordinate,proto3" json:"coordinate,omitempty"`
	TerrainId     string                 `protobuf:"bytes,2,opt,name=terrain_id,json=terrainId,proto3" json:"terrain_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tile) Reset() {
	*x = Tile{}
	mi := &file_map_v1_tile_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tile) ProtoMessage() {}

func (x *Tile) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_tile_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tile.ProtoReflect.Descriptor instead.
func (*Tile) Descriptor() ([]byte, []int) {
	return file_map_v1_tile_proto_rawDescGZIP(), []int{0}
}

func (x *Tile) GetCoordinate() *Tile_Coordinate {
	if x != nil {
		return x.Coordinate
	}
	return nil
}

func (x *Tile) GetTerrainId() string {
	if x != nil {
		return x.TerrainId
	}
	return ""
}

type Tile_Coordinate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Row           uint32                 `protobuf:"varint,1,opt,name=row,proto3" json:"row,omitempty"`
	Column        uint32                 `protobuf:"varint,2,opt,name=column,proto3" json:"column,omitempty"`
	Depth         uint32                 `protobuf:"varint,3,opt,name=depth,proto3" json:"depth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tile_Coordinate) Reset() {
	*x = Tile_Coordinate{}
	mi := &file_map_v1_tile_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tile_Coordinate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tile_Coordinate) ProtoMessage() {}

func (x *Tile_Coordinate) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_tile_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tile_Coordinate.ProtoReflect.Descriptor instead.
func (*Tile_Coordinate) Descriptor() ([]byte, []int) {
	return file_map_v1_tile_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Tile_Coordinate) GetRow() uint32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *Tile_Coordinate) GetColumn() uint32 {
	if x != nil {
		return x.Column
	}
	return 0
}

func (x *Tile_Coordinate) GetDepth() uint32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

var File_map_v1_tile_proto protoreflect.FileDescriptor

const file_map_v1_tile_proto_rawDesc = "" +
	"\n" +
	"\x11map/v1/tile.proto\x12\x06map.v1\"\xac\x01\n" +
	"\x04Tile\x127\n" +
	"\n" +
	"coordinate\x18\x01 \x01(\v2\x17.map.v1.Tile.CoordinateR\n" +
	"coordinate\x12\x1d\n" +
	"\n" +
	"terrain_id\x18\x02 \x01(\tR\tterrainId\x1aL\n" +
	"\n" +
	"Coordinate\x12\x10\n" +
	"\x03row\x18\x01 \x01(\rR\x03row\x12\x16\n" +
	"\x06column\x18\x02 \x01(\rR\x06column\x12\x14\n" +
	"\x05depth\x18\x03 \x01(\rR\x05depthBy\n" +
	"\n" +
	"com.map.v1B\tTileProtoP\x01Z'github.com/openhexes/proto/map/v1;mapv1\xa2\x02\x03MXX\xaa\x02\x06Map.V1\xca\x02\x06Map\\V1\xe2\x02\x12Map\\V1\\GPBMetadata\xea\x02\aMap::V1b\x06proto3"

var (
	file_map_v1_tile_proto_rawDescOnce sync.Once
	file_map_v1_tile_proto_rawDescData []byte
)

func file_map_v1_tile_proto_rawDescGZIP() []byte {
	file_map_v1_tile_proto_rawDescOnce.Do(func() {
		file_map_v1_tile_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_map_v1_tile_proto_rawDesc), len(file_map_v1_tile_proto_rawDesc)))
	})
	return file_map_v1_tile_proto_rawDescData
}

var file_map_v1_tile_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_map_v1_tile_proto_goTypes = []any{
	(*Tile)(nil),            // 0: map.v1.Tile
	(*Tile_Coordinate)(nil), // 1: map.v1.Tile.Coordinate
}
var file_map_v1_tile_proto_depIdxs = []int32{
	1, // 0: map.v1.Tile.coordinate:type_name -> map.v1.Tile.Coordinate
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_map_v1_tile_proto_init() }
func file_map_v1_tile_proto_init() {
	if File_map_v1_tile_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_map_v1_tile_proto_rawDesc), len(file_map_v1_tile_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_map_v1_tile_proto_goTypes,
		DependencyIndexes: file_map_v1_tile_proto_depIdxs,
		MessageInfos:      file_map_v1_tile_proto_msgTypes,
	}.Build()
	File_map_v1_tile_proto = out.File
	file_map_v1_tile_proto_goTypes = nil
	file_map_v1_tile_proto_depIdxs = nil
}

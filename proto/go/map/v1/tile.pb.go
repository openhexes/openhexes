// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: map/v1/tile.proto

package mapv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Tile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Coordinate    *Tile_Coordinate       `protobuf:"bytes,1,opt,name=coordinate,proto3" json:"coordinate,omitempty"`
	TerrainId     string                 `protobuf:"bytes,2,opt,name=terrain_id,json=terrainId,proto3" json:"terrain_id,omitempty"`
	RenderingSpec *Tile_RenderingSpec    `protobuf:"bytes,3,opt,name=rendering_spec,json=renderingSpec,proto3" json:"rendering_spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tile) Reset() {
	*x = Tile{}
	mi := &file_map_v1_tile_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tile) ProtoMessage() {}

func (x *Tile) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_tile_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tile.ProtoReflect.Descriptor instead.
func (*Tile) Descriptor() ([]byte, []int) {
	return file_map_v1_tile_proto_rawDescGZIP(), []int{0}
}

func (x *Tile) GetCoordinate() *Tile_Coordinate {
	if x != nil {
		return x.Coordinate
	}
	return nil
}

func (x *Tile) GetTerrainId() string {
	if x != nil {
		return x.TerrainId
	}
	return ""
}

func (x *Tile) GetRenderingSpec() *Tile_RenderingSpec {
	if x != nil {
		return x.RenderingSpec
	}
	return nil
}

type Segment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bounds        *Segment_Bounds        `protobuf:"bytes,1,opt,name=bounds,proto3" json:"bounds,omitempty"`
	Tiles         []*Tile                `protobuf:"bytes,2,rep,name=tiles,proto3" json:"tiles,omitempty"`
	RenderingSpec *Segment_RenderingSpec `protobuf:"bytes,3,opt,name=rendering_spec,json=renderingSpec,proto3" json:"rendering_spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Segment) Reset() {
	*x = Segment{}
	mi := &file_map_v1_tile_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment) ProtoMessage() {}

func (x *Segment) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_tile_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment.ProtoReflect.Descriptor instead.
func (*Segment) Descriptor() ([]byte, []int) {
	return file_map_v1_tile_proto_rawDescGZIP(), []int{1}
}

func (x *Segment) GetBounds() *Segment_Bounds {
	if x != nil {
		return x.Bounds
	}
	return nil
}

func (x *Segment) GetTiles() []*Tile {
	if x != nil {
		return x.Tiles
	}
	return nil
}

func (x *Segment) GetRenderingSpec() *Segment_RenderingSpec {
	if x != nil {
		return x.RenderingSpec
	}
	return nil
}

type Grid struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SegmentRows   []*Segment_Row         `protobuf:"bytes,1,rep,name=segment_rows,json=segmentRows,proto3" json:"segment_rows,omitempty"`
	TotalRows     uint32                 `protobuf:"varint,2,opt,name=total_rows,json=totalRows,proto3" json:"total_rows,omitempty"`
	TotalColumns  uint32                 `protobuf:"varint,3,opt,name=total_columns,json=totalColumns,proto3" json:"total_columns,omitempty"`
	Depth         uint32                 `protobuf:"varint,4,opt,name=depth,proto3" json:"depth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Grid) Reset() {
	*x = Grid{}
	mi := &file_map_v1_tile_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Grid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Grid) ProtoMessage() {}

func (x *Grid) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_tile_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Grid.ProtoReflect.Descriptor instead.
func (*Grid) Descriptor() ([]byte, []int) {
	return file_map_v1_tile_proto_rawDescGZIP(), []int{2}
}

func (x *Grid) GetSegmentRows() []*Segment_Row {
	if x != nil {
		return x.SegmentRows
	}
	return nil
}

func (x *Grid) GetTotalRows() uint32 {
	if x != nil {
		return x.TotalRows
	}
	return 0
}

func (x *Grid) GetTotalColumns() uint32 {
	if x != nil {
		return x.TotalColumns
	}
	return 0
}

func (x *Grid) GetDepth() uint32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

type Tile_Coordinate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Row           uint32                 `protobuf:"varint,1,opt,name=row,proto3" json:"row,omitempty"`
	Column        uint32                 `protobuf:"varint,2,opt,name=column,proto3" json:"column,omitempty"`
	Depth         uint32                 `protobuf:"varint,3,opt,name=depth,proto3" json:"depth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tile_Coordinate) Reset() {
	*x = Tile_Coordinate{}
	mi := &file_map_v1_tile_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tile_Coordinate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tile_Coordinate) ProtoMessage() {}

func (x *Tile_Coordinate) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_tile_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tile_Coordinate.ProtoReflect.Descriptor instead.
func (*Tile_Coordinate) Descriptor() ([]byte, []int) {
	return file_map_v1_tile_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Tile_Coordinate) GetRow() uint32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *Tile_Coordinate) GetColumn() uint32 {
	if x != nil {
		return x.Column
	}
	return 0
}

func (x *Tile_Coordinate) GetDepth() uint32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

type Tile_Edge struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Direction          EdgeDirection          `protobuf:"varint,1,opt,name=direction,proto3,enum=map.v1.EdgeDirection" json:"direction,omitempty"`
	NeighbourTerrainId string                 `protobuf:"bytes,2,opt,name=neighbour_terrain_id,json=neighbourTerrainId,proto3" json:"neighbour_terrain_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Tile_Edge) Reset() {
	*x = Tile_Edge{}
	mi := &file_map_v1_tile_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tile_Edge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tile_Edge) ProtoMessage() {}

func (x *Tile_Edge) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_tile_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tile_Edge.ProtoReflect.Descriptor instead.
func (*Tile_Edge) Descriptor() ([]byte, []int) {
	return file_map_v1_tile_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Tile_Edge) GetDirection() EdgeDirection {
	if x != nil {
		return x.Direction
	}
	return EdgeDirection_EDGE_DIRECTION_UNSPECIFIED
}

func (x *Tile_Edge) GetNeighbourTerrainId() string {
	if x != nil {
		return x.NeighbourTerrainId
	}
	return ""
}

type Tile_Corner struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Direction     CornerDirection        `protobuf:"varint,1,opt,name=direction,proto3,enum=map.v1.CornerDirection" json:"direction,omitempty"`
	Edges         map[int32]*Tile_Edge   `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tile_Corner) Reset() {
	*x = Tile_Corner{}
	mi := &file_map_v1_tile_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tile_Corner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tile_Corner) ProtoMessage() {}

func (x *Tile_Corner) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_tile_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tile_Corner.ProtoReflect.Descriptor instead.
func (*Tile_Corner) Descriptor() ([]byte, []int) {
	return file_map_v1_tile_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Tile_Corner) GetDirection() CornerDirection {
	if x != nil {
		return x.Direction
	}
	return CornerDirection_CORNER_DIRECTION_UNSPECIFIED
}

func (x *Tile_Corner) GetEdges() map[int32]*Tile_Edge {
	if x != nil {
		return x.Edges
	}
	return nil
}

type Tile_RenderingSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Edges         map[int32]*Tile_Edge   `protobuf:"bytes,1,rep,name=edges,proto3" json:"edges,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Corners       map[int32]*Tile_Corner `protobuf:"bytes,2,rep,name=corners,proto3" json:"corners,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	FeatureIds    []string               `protobuf:"bytes,3,rep,name=feature_ids,json=featureIds,proto3" json:"feature_ids,omitempty"` // landscape features, e.g. trees, rocks, etc.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tile_RenderingSpec) Reset() {
	*x = Tile_RenderingSpec{}
	mi := &file_map_v1_tile_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tile_RenderingSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tile_RenderingSpec) ProtoMessage() {}

func (x *Tile_RenderingSpec) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_tile_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tile_RenderingSpec.ProtoReflect.Descriptor instead.
func (*Tile_RenderingSpec) Descriptor() ([]byte, []int) {
	return file_map_v1_tile_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Tile_RenderingSpec) GetEdges() map[int32]*Tile_Edge {
	if x != nil {
		return x.Edges
	}
	return nil
}

func (x *Tile_RenderingSpec) GetCorners() map[int32]*Tile_Corner {
	if x != nil {
		return x.Corners
	}
	return nil
}

func (x *Tile_RenderingSpec) GetFeatureIds() []string {
	if x != nil {
		return x.FeatureIds
	}
	return nil
}

type Segment_Bounds struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinRow        int32                  `protobuf:"varint,1,opt,name=min_row,json=minRow,proto3" json:"min_row,omitempty"`
	MaxRow        int32                  `protobuf:"varint,2,opt,name=max_row,json=maxRow,proto3" json:"max_row,omitempty"`
	MinColumn     int32                  `protobuf:"varint,3,opt,name=min_column,json=minColumn,proto3" json:"min_column,omitempty"`
	MaxColumn     int32                  `protobuf:"varint,4,opt,name=max_column,json=maxColumn,proto3" json:"max_column,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Segment_Bounds) Reset() {
	*x = Segment_Bounds{}
	mi := &file_map_v1_tile_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Segment_Bounds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment_Bounds) ProtoMessage() {}

func (x *Segment_Bounds) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_tile_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment_Bounds.ProtoReflect.Descriptor instead.
func (*Segment_Bounds) Descriptor() ([]byte, []int) {
	return file_map_v1_tile_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Segment_Bounds) GetMinRow() int32 {
	if x != nil {
		return x.MinRow
	}
	return 0
}

func (x *Segment_Bounds) GetMaxRow() int32 {
	if x != nil {
		return x.MaxRow
	}
	return 0
}

func (x *Segment_Bounds) GetMinColumn() int32 {
	if x != nil {
		return x.MinColumn
	}
	return 0
}

func (x *Segment_Bounds) GetMaxColumn() int32 {
	if x != nil {
		return x.MaxColumn
	}
	return 0
}

type Segment_RenderingSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Svg           string                 `protobuf:"bytes,1,opt,name=svg,proto3" json:"svg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Segment_RenderingSpec) Reset() {
	*x = Segment_RenderingSpec{}
	mi := &file_map_v1_tile_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Segment_RenderingSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment_RenderingSpec) ProtoMessage() {}

func (x *Segment_RenderingSpec) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_tile_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment_RenderingSpec.ProtoReflect.Descriptor instead.
func (*Segment_RenderingSpec) Descriptor() ([]byte, []int) {
	return file_map_v1_tile_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Segment_RenderingSpec) GetSvg() string {
	if x != nil {
		return x.Svg
	}
	return ""
}

type Segment_Row struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Segments      []*Segment             `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Segment_Row) Reset() {
	*x = Segment_Row{}
	mi := &file_map_v1_tile_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Segment_Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment_Row) ProtoMessage() {}

func (x *Segment_Row) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_tile_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment_Row.ProtoReflect.Descriptor instead.
func (*Segment_Row) Descriptor() ([]byte, []int) {
	return file_map_v1_tile_proto_rawDescGZIP(), []int{1, 2}
}

func (x *Segment_Row) GetSegments() []*Segment {
	if x != nil {
		return x.Segments
	}
	return nil
}

var File_map_v1_tile_proto protoreflect.FileDescriptor

const file_map_v1_tile_proto_rawDesc = "" +
	"\n" +
	"\x11map/v1/tile.proto\x12\x06map.v1\x1a\x14map/v1/compass.proto\"\xf4\x06\n" +
	"\x04Tile\x127\n" +
	"\n" +
	"coordinate\x18\x01 \x01(\v2\x17.map.v1.Tile.CoordinateR\n" +
	"coordinate\x12\x1d\n" +
	"\n" +
	"terrain_id\x18\x02 \x01(\tR\tterrainId\x12A\n" +
	"\x0erendering_spec\x18\x03 \x01(\v2\x1a.map.v1.Tile.RenderingSpecR\rrenderingSpec\x1aL\n" +
	"\n" +
	"Coordinate\x12\x10\n" +
	"\x03row\x18\x01 \x01(\rR\x03row\x12\x16\n" +
	"\x06column\x18\x02 \x01(\rR\x06column\x12\x14\n" +
	"\x05depth\x18\x03 \x01(\rR\x05depth\x1am\n" +
	"\x04Edge\x123\n" +
	"\tdirection\x18\x01 \x01(\x0e2\x15.map.v1.EdgeDirectionR\tdirection\x120\n" +
	"\x14neighbour_terrain_id\x18\x02 \x01(\tR\x12neighbourTerrainId\x1a\xc2\x01\n" +
	"\x06Corner\x125\n" +
	"\tdirection\x18\x01 \x01(\x0e2\x17.map.v1.CornerDirectionR\tdirection\x124\n" +
	"\x05edges\x18\x02 \x03(\v2\x1e.map.v1.Tile.Corner.EdgesEntryR\x05edges\x1aK\n" +
	"\n" +
	"EdgesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12'\n" +
	"\x05value\x18\x02 \x01(\v2\x11.map.v1.Tile.EdgeR\x05value:\x028\x01\x1a\xce\x02\n" +
	"\rRenderingSpec\x12;\n" +
	"\x05edges\x18\x01 \x03(\v2%.map.v1.Tile.RenderingSpec.EdgesEntryR\x05edges\x12A\n" +
	"\acorners\x18\x02 \x03(\v2'.map.v1.Tile.RenderingSpec.CornersEntryR\acorners\x12\x1f\n" +
	"\vfeature_ids\x18\x03 \x03(\tR\n" +
	"featureIds\x1aK\n" +
	"\n" +
	"EdgesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12'\n" +
	"\x05value\x18\x02 \x01(\v2\x11.map.v1.Tile.EdgeR\x05value:\x028\x01\x1aO\n" +
	"\fCornersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12)\n" +
	"\x05value\x18\x02 \x01(\v2\x13.map.v1.Tile.CornerR\x05value:\x028\x01\"\xf4\x02\n" +
	"\aSegment\x12.\n" +
	"\x06bounds\x18\x01 \x01(\v2\x16.map.v1.Segment.BoundsR\x06bounds\x12\"\n" +
	"\x05tiles\x18\x02 \x03(\v2\f.map.v1.TileR\x05tiles\x12D\n" +
	"\x0erendering_spec\x18\x03 \x01(\v2\x1d.map.v1.Segment.RenderingSpecR\rrenderingSpec\x1ax\n" +
	"\x06Bounds\x12\x17\n" +
	"\amin_row\x18\x01 \x01(\x05R\x06minRow\x12\x17\n" +
	"\amax_row\x18\x02 \x01(\x05R\x06maxRow\x12\x1d\n" +
	"\n" +
	"min_column\x18\x03 \x01(\x05R\tminColumn\x12\x1d\n" +
	"\n" +
	"max_column\x18\x04 \x01(\x05R\tmaxColumn\x1a!\n" +
	"\rRenderingSpec\x12\x10\n" +
	"\x03svg\x18\x01 \x01(\tR\x03svg\x1a2\n" +
	"\x03Row\x12+\n" +
	"\bsegments\x18\x01 \x03(\v2\x0f.map.v1.SegmentR\bsegments\"\x98\x01\n" +
	"\x04Grid\x126\n" +
	"\fsegment_rows\x18\x01 \x03(\v2\x13.map.v1.Segment.RowR\vsegmentRows\x12\x1d\n" +
	"\n" +
	"total_rows\x18\x02 \x01(\rR\ttotalRows\x12#\n" +
	"\rtotal_columns\x18\x03 \x01(\rR\ftotalColumns\x12\x14\n" +
	"\x05depth\x18\x04 \x01(\rR\x05depthBy\n" +
	"\n" +
	"com.map.v1B\tTileProtoP\x01Z'github.com/openhexes/proto/map/v1;mapv1\xa2\x02\x03MXX\xaa\x02\x06Map.V1\xca\x02\x06Map\\V1\xe2\x02\x12Map\\V1\\GPBMetadata\xea\x02\aMap::V1b\x06proto3"

var (
	file_map_v1_tile_proto_rawDescOnce sync.Once
	file_map_v1_tile_proto_rawDescData []byte
)

func file_map_v1_tile_proto_rawDescGZIP() []byte {
	file_map_v1_tile_proto_rawDescOnce.Do(func() {
		file_map_v1_tile_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_map_v1_tile_proto_rawDesc), len(file_map_v1_tile_proto_rawDesc)))
	})
	return file_map_v1_tile_proto_rawDescData
}

var file_map_v1_tile_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_map_v1_tile_proto_goTypes = []any{
	(*Tile)(nil),                  // 0: map.v1.Tile
	(*Segment)(nil),               // 1: map.v1.Segment
	(*Grid)(nil),                  // 2: map.v1.Grid
	(*Tile_Coordinate)(nil),       // 3: map.v1.Tile.Coordinate
	(*Tile_Edge)(nil),             // 4: map.v1.Tile.Edge
	(*Tile_Corner)(nil),           // 5: map.v1.Tile.Corner
	(*Tile_RenderingSpec)(nil),    // 6: map.v1.Tile.RenderingSpec
	nil,                           // 7: map.v1.Tile.Corner.EdgesEntry
	nil,                           // 8: map.v1.Tile.RenderingSpec.EdgesEntry
	nil,                           // 9: map.v1.Tile.RenderingSpec.CornersEntry
	(*Segment_Bounds)(nil),        // 10: map.v1.Segment.Bounds
	(*Segment_RenderingSpec)(nil), // 11: map.v1.Segment.RenderingSpec
	(*Segment_Row)(nil),           // 12: map.v1.Segment.Row
	(EdgeDirection)(0),            // 13: map.v1.EdgeDirection
	(CornerDirection)(0),          // 14: map.v1.CornerDirection
}
var file_map_v1_tile_proto_depIdxs = []int32{
	3,  // 0: map.v1.Tile.coordinate:type_name -> map.v1.Tile.Coordinate
	6,  // 1: map.v1.Tile.rendering_spec:type_name -> map.v1.Tile.RenderingSpec
	10, // 2: map.v1.Segment.bounds:type_name -> map.v1.Segment.Bounds
	0,  // 3: map.v1.Segment.tiles:type_name -> map.v1.Tile
	11, // 4: map.v1.Segment.rendering_spec:type_name -> map.v1.Segment.RenderingSpec
	12, // 5: map.v1.Grid.segment_rows:type_name -> map.v1.Segment.Row
	13, // 6: map.v1.Tile.Edge.direction:type_name -> map.v1.EdgeDirection
	14, // 7: map.v1.Tile.Corner.direction:type_name -> map.v1.CornerDirection
	7,  // 8: map.v1.Tile.Corner.edges:type_name -> map.v1.Tile.Corner.EdgesEntry
	8,  // 9: map.v1.Tile.RenderingSpec.edges:type_name -> map.v1.Tile.RenderingSpec.EdgesEntry
	9,  // 10: map.v1.Tile.RenderingSpec.corners:type_name -> map.v1.Tile.RenderingSpec.CornersEntry
	4,  // 11: map.v1.Tile.Corner.EdgesEntry.value:type_name -> map.v1.Tile.Edge
	4,  // 12: map.v1.Tile.RenderingSpec.EdgesEntry.value:type_name -> map.v1.Tile.Edge
	5,  // 13: map.v1.Tile.RenderingSpec.CornersEntry.value:type_name -> map.v1.Tile.Corner
	1,  // 14: map.v1.Segment.Row.segments:type_name -> map.v1.Segment
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_map_v1_tile_proto_init() }
func file_map_v1_tile_proto_init() {
	if File_map_v1_tile_proto != nil {
		return
	}
	file_map_v1_compass_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_map_v1_tile_proto_rawDesc), len(file_map_v1_tile_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_map_v1_tile_proto_goTypes,
		DependencyIndexes: file_map_v1_tile_proto_depIdxs,
		MessageInfos:      file_map_v1_tile_proto_msgTypes,
	}.Build()
	File_map_v1_tile_proto = out.File
	file_map_v1_tile_proto_goTypes = nil
	file_map_v1_tile_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: map/v1/terrain.proto

package mapv1

import (
	v11 "github.com/openhexes/proto/creatures/v1"
	v1 "github.com/openhexes/proto/magic/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Terrain_MovementType int32

const (
	Terrain_MOVEMENT_TYPE_UNSPECIFIED Terrain_MovementType = 0
	Terrain_MOVEMENT_TYPE_WALKING     Terrain_MovementType = 1
	Terrain_MOVEMENT_TYPE_SWIMMING    Terrain_MovementType = 2
	Terrain_MOVEMENT_TYPE_FLYING      Terrain_MovementType = 3
	Terrain_MOVEMENT_TYPE_PORTALING   Terrain_MovementType = 4
)

// Enum value maps for Terrain_MovementType.
var (
	Terrain_MovementType_name = map[int32]string{
		0: "MOVEMENT_TYPE_UNSPECIFIED",
		1: "MOVEMENT_TYPE_WALKING",
		2: "MOVEMENT_TYPE_SWIMMING",
		3: "MOVEMENT_TYPE_FLYING",
		4: "MOVEMENT_TYPE_PORTALING",
	}
	Terrain_MovementType_value = map[string]int32{
		"MOVEMENT_TYPE_UNSPECIFIED": 0,
		"MOVEMENT_TYPE_WALKING":     1,
		"MOVEMENT_TYPE_SWIMMING":    2,
		"MOVEMENT_TYPE_FLYING":      3,
		"MOVEMENT_TYPE_PORTALING":   4,
	}
)

func (x Terrain_MovementType) Enum() *Terrain_MovementType {
	p := new(Terrain_MovementType)
	*p = x
	return p
}

func (x Terrain_MovementType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Terrain_MovementType) Descriptor() protoreflect.EnumDescriptor {
	return file_map_v1_terrain_proto_enumTypes[0].Descriptor()
}

func (Terrain_MovementType) Type() protoreflect.EnumType {
	return &file_map_v1_terrain_proto_enumTypes[0]
}

func (x Terrain_MovementType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Terrain_MovementType.Descriptor instead.
func (Terrain_MovementType) EnumDescriptor() ([]byte, []int) {
	return file_map_v1_terrain_proto_rawDescGZIP(), []int{0, 0}
}

type Terrain struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tags            []string               `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	MovementPenalty uint32                 `protobuf:"varint,3,opt,name=movement_penalty,json=movementPenalty,proto3" json:"movement_penalty,omitempty"`
	PassableWith    []Terrain_MovementType `protobuf:"varint,4,rep,packed,name=passable_with,json=passableWith,proto3,enum=map.v1.Terrain_MovementType" json:"passable_with,omitempty"`
	Effects         []*Terrain_Effect      `protobuf:"bytes,5,rep,name=effects,proto3" json:"effects,omitempty"`
	RenderingSpec   *Terrain_RenderingSpec `protobuf:"bytes,6,opt,name=rendering_spec,json=renderingSpec,proto3" json:"rendering_spec,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Terrain) Reset() {
	*x = Terrain{}
	mi := &file_map_v1_terrain_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Terrain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terrain) ProtoMessage() {}

func (x *Terrain) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_terrain_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terrain.ProtoReflect.Descriptor instead.
func (*Terrain) Descriptor() ([]byte, []int) {
	return file_map_v1_terrain_proto_rawDescGZIP(), []int{0}
}

func (x *Terrain) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Terrain) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Terrain) GetMovementPenalty() uint32 {
	if x != nil {
		return x.MovementPenalty
	}
	return 0
}

func (x *Terrain) GetPassableWith() []Terrain_MovementType {
	if x != nil {
		return x.PassableWith
	}
	return nil
}

func (x *Terrain) GetEffects() []*Terrain_Effect {
	if x != nil {
		return x.Effects
	}
	return nil
}

func (x *Terrain) GetRenderingSpec() *Terrain_RenderingSpec {
	if x != nil {
		return x.RenderingSpec
	}
	return nil
}

type Terrain_Effect struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*Terrain_Effect_ModifySpellLevel_
	//	*Terrain_Effect_PreventSpellCasting_
	//	*Terrain_Effect_DisableNativeTerrainBonuses_
	//	*Terrain_Effect_ModifyCreatureMovementType_
	//	*Terrain_Effect_ModifyCreatureMorale_
	//	*Terrain_Effect_ModifyCreatureLuck_
	//	*Terrain_Effect_ModifyCreatureAttack_
	//	*Terrain_Effect_ModifyCreatureDefence_
	//	*Terrain_Effect_ModifyCreatureSpeed_
	Kind          isTerrain_Effect_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Terrain_Effect) Reset() {
	*x = Terrain_Effect{}
	mi := &file_map_v1_terrain_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Terrain_Effect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terrain_Effect) ProtoMessage() {}

func (x *Terrain_Effect) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_terrain_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terrain_Effect.ProtoReflect.Descriptor instead.
func (*Terrain_Effect) Descriptor() ([]byte, []int) {
	return file_map_v1_terrain_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Terrain_Effect) GetKind() isTerrain_Effect_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Terrain_Effect) GetModifySpellLevel() *Terrain_Effect_ModifySpellLevel {
	if x != nil {
		if x, ok := x.Kind.(*Terrain_Effect_ModifySpellLevel_); ok {
			return x.ModifySpellLevel
		}
	}
	return nil
}

func (x *Terrain_Effect) GetPreventSpellCasting() *Terrain_Effect_PreventSpellCasting {
	if x != nil {
		if x, ok := x.Kind.(*Terrain_Effect_PreventSpellCasting_); ok {
			return x.PreventSpellCasting
		}
	}
	return nil
}

func (x *Terrain_Effect) GetDisableNativeTerrainBonuses() *Terrain_Effect_DisableNativeTerrainBonuses {
	if x != nil {
		if x, ok := x.Kind.(*Terrain_Effect_DisableNativeTerrainBonuses_); ok {
			return x.DisableNativeTerrainBonuses
		}
	}
	return nil
}

func (x *Terrain_Effect) GetModifyCreatureMovementType() *Terrain_Effect_ModifyCreatureMovementType {
	if x != nil {
		if x, ok := x.Kind.(*Terrain_Effect_ModifyCreatureMovementType_); ok {
			return x.ModifyCreatureMovementType
		}
	}
	return nil
}

func (x *Terrain_Effect) GetModifyCreatureMorale() *Terrain_Effect_ModifyCreatureMorale {
	if x != nil {
		if x, ok := x.Kind.(*Terrain_Effect_ModifyCreatureMorale_); ok {
			return x.ModifyCreatureMorale
		}
	}
	return nil
}

func (x *Terrain_Effect) GetModifyCreatureLuck() *Terrain_Effect_ModifyCreatureLuck {
	if x != nil {
		if x, ok := x.Kind.(*Terrain_Effect_ModifyCreatureLuck_); ok {
			return x.ModifyCreatureLuck
		}
	}
	return nil
}

func (x *Terrain_Effect) GetModifyCreatureAttack() *Terrain_Effect_ModifyCreatureAttack {
	if x != nil {
		if x, ok := x.Kind.(*Terrain_Effect_ModifyCreatureAttack_); ok {
			return x.ModifyCreatureAttack
		}
	}
	return nil
}

func (x *Terrain_Effect) GetModifyCreatureDefence() *Terrain_Effect_ModifyCreatureDefence {
	if x != nil {
		if x, ok := x.Kind.(*Terrain_Effect_ModifyCreatureDefence_); ok {
			return x.ModifyCreatureDefence
		}
	}
	return nil
}

func (x *Terrain_Effect) GetModifyCreatureSpeed() *Terrain_Effect_ModifyCreatureSpeed {
	if x != nil {
		if x, ok := x.Kind.(*Terrain_Effect_ModifyCreatureSpeed_); ok {
			return x.ModifyCreatureSpeed
		}
	}
	return nil
}

type isTerrain_Effect_Kind interface {
	isTerrain_Effect_Kind()
}

type Terrain_Effect_ModifySpellLevel_ struct {
	ModifySpellLevel *Terrain_Effect_ModifySpellLevel `protobuf:"bytes,1,opt,name=modify_spell_level,json=modifySpellLevel,proto3,oneof"`
}

type Terrain_Effect_PreventSpellCasting_ struct {
	PreventSpellCasting *Terrain_Effect_PreventSpellCasting `protobuf:"bytes,2,opt,name=prevent_spell_casting,json=preventSpellCasting,proto3,oneof"`
}

type Terrain_Effect_DisableNativeTerrainBonuses_ struct {
	DisableNativeTerrainBonuses *Terrain_Effect_DisableNativeTerrainBonuses `protobuf:"bytes,3,opt,name=disable_native_terrain_bonuses,json=disableNativeTerrainBonuses,proto3,oneof"`
}

type Terrain_Effect_ModifyCreatureMovementType_ struct {
	ModifyCreatureMovementType *Terrain_Effect_ModifyCreatureMovementType `protobuf:"bytes,4,opt,name=modify_creature_movement_type,json=modifyCreatureMovementType,proto3,oneof"`
}

type Terrain_Effect_ModifyCreatureMorale_ struct {
	ModifyCreatureMorale *Terrain_Effect_ModifyCreatureMorale `protobuf:"bytes,5,opt,name=modify_creature_morale,json=modifyCreatureMorale,proto3,oneof"`
}

type Terrain_Effect_ModifyCreatureLuck_ struct {
	ModifyCreatureLuck *Terrain_Effect_ModifyCreatureLuck `protobuf:"bytes,6,opt,name=modify_creature_luck,json=modifyCreatureLuck,proto3,oneof"`
}

type Terrain_Effect_ModifyCreatureAttack_ struct {
	ModifyCreatureAttack *Terrain_Effect_ModifyCreatureAttack `protobuf:"bytes,7,opt,name=modify_creature_attack,json=modifyCreatureAttack,proto3,oneof"`
}

type Terrain_Effect_ModifyCreatureDefence_ struct {
	ModifyCreatureDefence *Terrain_Effect_ModifyCreatureDefence `protobuf:"bytes,8,opt,name=modify_creature_defence,json=modifyCreatureDefence,proto3,oneof"`
}

type Terrain_Effect_ModifyCreatureSpeed_ struct {
	ModifyCreatureSpeed *Terrain_Effect_ModifyCreatureSpeed `protobuf:"bytes,9,opt,name=modify_creature_speed,json=modifyCreatureSpeed,proto3,oneof"`
}

func (*Terrain_Effect_ModifySpellLevel_) isTerrain_Effect_Kind() {}

func (*Terrain_Effect_PreventSpellCasting_) isTerrain_Effect_Kind() {}

func (*Terrain_Effect_DisableNativeTerrainBonuses_) isTerrain_Effect_Kind() {}

func (*Terrain_Effect_ModifyCreatureMovementType_) isTerrain_Effect_Kind() {}

func (*Terrain_Effect_ModifyCreatureMorale_) isTerrain_Effect_Kind() {}

func (*Terrain_Effect_ModifyCreatureLuck_) isTerrain_Effect_Kind() {}

func (*Terrain_Effect_ModifyCreatureAttack_) isTerrain_Effect_Kind() {}

func (*Terrain_Effect_ModifyCreatureDefence_) isTerrain_Effect_Kind() {}

func (*Terrain_Effect_ModifyCreatureSpeed_) isTerrain_Effect_Kind() {}

type Terrain_RenderingSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClassName     string                 `protobuf:"bytes,1,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Texture       string                 `protobuf:"bytes,2,opt,name=texture,proto3" json:"texture,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Terrain_RenderingSpec) Reset() {
	*x = Terrain_RenderingSpec{}
	mi := &file_map_v1_terrain_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Terrain_RenderingSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terrain_RenderingSpec) ProtoMessage() {}

func (x *Terrain_RenderingSpec) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_terrain_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terrain_RenderingSpec.ProtoReflect.Descriptor instead.
func (*Terrain_RenderingSpec) Descriptor() ([]byte, []int) {
	return file_map_v1_terrain_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Terrain_RenderingSpec) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *Terrain_RenderingSpec) GetTexture() string {
	if x != nil {
		return x.Texture
	}
	return ""
}

type Terrain_Effect_ModifySpellLevel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *v1.Spell_Filter       `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Delta         int32                  `protobuf:"varint,2,opt,name=delta,proto3" json:"delta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Terrain_Effect_ModifySpellLevel) Reset() {
	*x = Terrain_Effect_ModifySpellLevel{}
	mi := &file_map_v1_terrain_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Terrain_Effect_ModifySpellLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terrain_Effect_ModifySpellLevel) ProtoMessage() {}

func (x *Terrain_Effect_ModifySpellLevel) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_terrain_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terrain_Effect_ModifySpellLevel.ProtoReflect.Descriptor instead.
func (*Terrain_Effect_ModifySpellLevel) Descriptor() ([]byte, []int) {
	return file_map_v1_terrain_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Terrain_Effect_ModifySpellLevel) GetFilter() *v1.Spell_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *Terrain_Effect_ModifySpellLevel) GetDelta() int32 {
	if x != nil {
		return x.Delta
	}
	return 0
}

type Terrain_Effect_PreventSpellCasting struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *v1.Spell_Filter       `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	LevelGte      *int32                 `protobuf:"varint,2,opt,name=level_gte,json=levelGte,proto3,oneof" json:"level_gte,omitempty"`
	LevelLte      *int32                 `protobuf:"varint,3,opt,name=level_lte,json=levelLte,proto3,oneof" json:"level_lte,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Terrain_Effect_PreventSpellCasting) Reset() {
	*x = Terrain_Effect_PreventSpellCasting{}
	mi := &file_map_v1_terrain_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Terrain_Effect_PreventSpellCasting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terrain_Effect_PreventSpellCasting) ProtoMessage() {}

func (x *Terrain_Effect_PreventSpellCasting) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_terrain_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terrain_Effect_PreventSpellCasting.ProtoReflect.Descriptor instead.
func (*Terrain_Effect_PreventSpellCasting) Descriptor() ([]byte, []int) {
	return file_map_v1_terrain_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *Terrain_Effect_PreventSpellCasting) GetFilter() *v1.Spell_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *Terrain_Effect_PreventSpellCasting) GetLevelGte() int32 {
	if x != nil && x.LevelGte != nil {
		return *x.LevelGte
	}
	return 0
}

func (x *Terrain_Effect_PreventSpellCasting) GetLevelLte() int32 {
	if x != nil && x.LevelLte != nil {
		return *x.LevelLte
	}
	return 0
}

type Terrain_Effect_DisableNativeTerrainBonuses struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Terrain_Effect_DisableNativeTerrainBonuses) Reset() {
	*x = Terrain_Effect_DisableNativeTerrainBonuses{}
	mi := &file_map_v1_terrain_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Terrain_Effect_DisableNativeTerrainBonuses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terrain_Effect_DisableNativeTerrainBonuses) ProtoMessage() {}

func (x *Terrain_Effect_DisableNativeTerrainBonuses) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_terrain_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terrain_Effect_DisableNativeTerrainBonuses.ProtoReflect.Descriptor instead.
func (*Terrain_Effect_DisableNativeTerrainBonuses) Descriptor() ([]byte, []int) {
	return file_map_v1_terrain_proto_rawDescGZIP(), []int{0, 0, 2}
}

type Terrain_Effect_ModifyCreatureMovementType struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Filter        *v11.Creature_Kind_Filter   `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Remove        []v11.Creature_MovementType `protobuf:"varint,2,rep,packed,name=remove,proto3,enum=creatures.v1.Creature_MovementType" json:"remove,omitempty"`
	Add           []v11.Creature_MovementType `protobuf:"varint,3,rep,packed,name=add,proto3,enum=creatures.v1.Creature_MovementType" json:"add,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Terrain_Effect_ModifyCreatureMovementType) Reset() {
	*x = Terrain_Effect_ModifyCreatureMovementType{}
	mi := &file_map_v1_terrain_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Terrain_Effect_ModifyCreatureMovementType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terrain_Effect_ModifyCreatureMovementType) ProtoMessage() {}

func (x *Terrain_Effect_ModifyCreatureMovementType) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_terrain_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terrain_Effect_ModifyCreatureMovementType.ProtoReflect.Descriptor instead.
func (*Terrain_Effect_ModifyCreatureMovementType) Descriptor() ([]byte, []int) {
	return file_map_v1_terrain_proto_rawDescGZIP(), []int{0, 0, 3}
}

func (x *Terrain_Effect_ModifyCreatureMovementType) GetFilter() *v11.Creature_Kind_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *Terrain_Effect_ModifyCreatureMovementType) GetRemove() []v11.Creature_MovementType {
	if x != nil {
		return x.Remove
	}
	return nil
}

func (x *Terrain_Effect_ModifyCreatureMovementType) GetAdd() []v11.Creature_MovementType {
	if x != nil {
		return x.Add
	}
	return nil
}

type Terrain_Effect_ModifyCreatureMorale struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Filter        *v11.Creature_Kind_Filter           `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Modification  *v11.Creature_AttributeModification `protobuf:"bytes,2,opt,name=modification,proto3" json:"modification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Terrain_Effect_ModifyCreatureMorale) Reset() {
	*x = Terrain_Effect_ModifyCreatureMorale{}
	mi := &file_map_v1_terrain_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Terrain_Effect_ModifyCreatureMorale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terrain_Effect_ModifyCreatureMorale) ProtoMessage() {}

func (x *Terrain_Effect_ModifyCreatureMorale) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_terrain_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terrain_Effect_ModifyCreatureMorale.ProtoReflect.Descriptor instead.
func (*Terrain_Effect_ModifyCreatureMorale) Descriptor() ([]byte, []int) {
	return file_map_v1_terrain_proto_rawDescGZIP(), []int{0, 0, 4}
}

func (x *Terrain_Effect_ModifyCreatureMorale) GetFilter() *v11.Creature_Kind_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *Terrain_Effect_ModifyCreatureMorale) GetModification() *v11.Creature_AttributeModification {
	if x != nil {
		return x.Modification
	}
	return nil
}

type Terrain_Effect_ModifyCreatureLuck struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Filter        *v11.Creature_Kind_Filter           `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Modification  *v11.Creature_AttributeModification `protobuf:"bytes,2,opt,name=modification,proto3" json:"modification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Terrain_Effect_ModifyCreatureLuck) Reset() {
	*x = Terrain_Effect_ModifyCreatureLuck{}
	mi := &file_map_v1_terrain_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Terrain_Effect_ModifyCreatureLuck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terrain_Effect_ModifyCreatureLuck) ProtoMessage() {}

func (x *Terrain_Effect_ModifyCreatureLuck) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_terrain_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terrain_Effect_ModifyCreatureLuck.ProtoReflect.Descriptor instead.
func (*Terrain_Effect_ModifyCreatureLuck) Descriptor() ([]byte, []int) {
	return file_map_v1_terrain_proto_rawDescGZIP(), []int{0, 0, 5}
}

func (x *Terrain_Effect_ModifyCreatureLuck) GetFilter() *v11.Creature_Kind_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *Terrain_Effect_ModifyCreatureLuck) GetModification() *v11.Creature_AttributeModification {
	if x != nil {
		return x.Modification
	}
	return nil
}

type Terrain_Effect_ModifyCreatureAttack struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Filter        *v11.Creature_Kind_Filter           `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Modification  *v11.Creature_AttributeModification `protobuf:"bytes,2,opt,name=modification,proto3" json:"modification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Terrain_Effect_ModifyCreatureAttack) Reset() {
	*x = Terrain_Effect_ModifyCreatureAttack{}
	mi := &file_map_v1_terrain_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Terrain_Effect_ModifyCreatureAttack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terrain_Effect_ModifyCreatureAttack) ProtoMessage() {}

func (x *Terrain_Effect_ModifyCreatureAttack) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_terrain_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terrain_Effect_ModifyCreatureAttack.ProtoReflect.Descriptor instead.
func (*Terrain_Effect_ModifyCreatureAttack) Descriptor() ([]byte, []int) {
	return file_map_v1_terrain_proto_rawDescGZIP(), []int{0, 0, 6}
}

func (x *Terrain_Effect_ModifyCreatureAttack) GetFilter() *v11.Creature_Kind_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *Terrain_Effect_ModifyCreatureAttack) GetModification() *v11.Creature_AttributeModification {
	if x != nil {
		return x.Modification
	}
	return nil
}

type Terrain_Effect_ModifyCreatureDefence struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Filter        *v11.Creature_Kind_Filter           `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Modification  *v11.Creature_AttributeModification `protobuf:"bytes,2,opt,name=modification,proto3" json:"modification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Terrain_Effect_ModifyCreatureDefence) Reset() {
	*x = Terrain_Effect_ModifyCreatureDefence{}
	mi := &file_map_v1_terrain_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Terrain_Effect_ModifyCreatureDefence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terrain_Effect_ModifyCreatureDefence) ProtoMessage() {}

func (x *Terrain_Effect_ModifyCreatureDefence) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_terrain_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terrain_Effect_ModifyCreatureDefence.ProtoReflect.Descriptor instead.
func (*Terrain_Effect_ModifyCreatureDefence) Descriptor() ([]byte, []int) {
	return file_map_v1_terrain_proto_rawDescGZIP(), []int{0, 0, 7}
}

func (x *Terrain_Effect_ModifyCreatureDefence) GetFilter() *v11.Creature_Kind_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *Terrain_Effect_ModifyCreatureDefence) GetModification() *v11.Creature_AttributeModification {
	if x != nil {
		return x.Modification
	}
	return nil
}

type Terrain_Effect_ModifyCreatureSpeed struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Filter        *v11.Creature_Kind_Filter           `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Modification  *v11.Creature_AttributeModification `protobuf:"bytes,2,opt,name=modification,proto3" json:"modification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Terrain_Effect_ModifyCreatureSpeed) Reset() {
	*x = Terrain_Effect_ModifyCreatureSpeed{}
	mi := &file_map_v1_terrain_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Terrain_Effect_ModifyCreatureSpeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terrain_Effect_ModifyCreatureSpeed) ProtoMessage() {}

func (x *Terrain_Effect_ModifyCreatureSpeed) ProtoReflect() protoreflect.Message {
	mi := &file_map_v1_terrain_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terrain_Effect_ModifyCreatureSpeed.ProtoReflect.Descriptor instead.
func (*Terrain_Effect_ModifyCreatureSpeed) Descriptor() ([]byte, []int) {
	return file_map_v1_terrain_proto_rawDescGZIP(), []int{0, 0, 8}
}

func (x *Terrain_Effect_ModifyCreatureSpeed) GetFilter() *v11.Creature_Kind_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *Terrain_Effect_ModifyCreatureSpeed) GetModification() *v11.Creature_AttributeModification {
	if x != nil {
		return x.Modification
	}
	return nil
}

var File_map_v1_terrain_proto protoreflect.FileDescriptor

const file_map_v1_terrain_proto_rawDesc = "" +
	"\n" +
	"\x14map/v1/terrain.proto\x12\x06map.v1\x1a\x1bcreatures/v1/creature.proto\x1a\x14magic/v1/spell.proto\"\xe0\x15\n" +
	"\aTerrain\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04tags\x18\x02 \x03(\tR\x04tags\x12)\n" +
	"\x10movement_penalty\x18\x03 \x01(\rR\x0fmovementPenalty\x12A\n" +
	"\rpassable_with\x18\x04 \x03(\x0e2\x1c.map.v1.Terrain.MovementTypeR\fpassableWith\x120\n" +
	"\aeffects\x18\x05 \x03(\v2\x16.map.v1.Terrain.EffectR\aeffects\x12D\n" +
	"\x0erendering_spec\x18\x06 \x01(\v2\x1d.map.v1.Terrain.RenderingSpecR\rrenderingSpec\x1a\xe2\x11\n" +
	"\x06Effect\x12W\n" +
	"\x12modify_spell_level\x18\x01 \x01(\v2'.map.v1.Terrain.Effect.ModifySpellLevelH\x00R\x10modifySpellLevel\x12`\n" +
	"\x15prevent_spell_casting\x18\x02 \x01(\v2*.map.v1.Terrain.Effect.PreventSpellCastingH\x00R\x13preventSpellCasting\x12y\n" +
	"\x1edisable_native_terrain_bonuses\x18\x03 \x01(\v22.map.v1.Terrain.Effect.DisableNativeTerrainBonusesH\x00R\x1bdisableNativeTerrainBonuses\x12v\n" +
	"\x1dmodify_creature_movement_type\x18\x04 \x01(\v21.map.v1.Terrain.Effect.ModifyCreatureMovementTypeH\x00R\x1amodifyCreatureMovementType\x12c\n" +
	"\x16modify_creature_morale\x18\x05 \x01(\v2+.map.v1.Terrain.Effect.ModifyCreatureMoraleH\x00R\x14modifyCreatureMorale\x12]\n" +
	"\x14modify_creature_luck\x18\x06 \x01(\v2).map.v1.Terrain.Effect.ModifyCreatureLuckH\x00R\x12modifyCreatureLuck\x12c\n" +
	"\x16modify_creature_attack\x18\a \x01(\v2+.map.v1.Terrain.Effect.ModifyCreatureAttackH\x00R\x14modifyCreatureAttack\x12f\n" +
	"\x17modify_creature_defence\x18\b \x01(\v2,.map.v1.Terrain.Effect.ModifyCreatureDefenceH\x00R\x15modifyCreatureDefence\x12`\n" +
	"\x15modify_creature_speed\x18\t \x01(\v2*.map.v1.Terrain.Effect.ModifyCreatureSpeedH\x00R\x13modifyCreatureSpeed\x1aX\n" +
	"\x10ModifySpellLevel\x12.\n" +
	"\x06filter\x18\x01 \x01(\v2\x16.magic.v1.Spell.FilterR\x06filter\x12\x14\n" +
	"\x05delta\x18\x02 \x01(\x05R\x05delta\x1a\xa5\x01\n" +
	"\x13PreventSpellCasting\x12.\n" +
	"\x06filter\x18\x01 \x01(\v2\x16.magic.v1.Spell.FilterR\x06filter\x12 \n" +
	"\tlevel_gte\x18\x02 \x01(\x05H\x00R\blevelGte\x88\x01\x01\x12 \n" +
	"\tlevel_lte\x18\x03 \x01(\x05H\x01R\blevelLte\x88\x01\x01B\f\n" +
	"\n" +
	"_level_gteB\f\n" +
	"\n" +
	"_level_lte\x1a\x1d\n" +
	"\x1bDisableNativeTerrainBonuses\x1a\xcc\x01\n" +
	"\x1aModifyCreatureMovementType\x12:\n" +
	"\x06filter\x18\x01 \x01(\v2\".creatures.v1.Creature.Kind.FilterR\x06filter\x12;\n" +
	"\x06remove\x18\x02 \x03(\x0e2#.creatures.v1.Creature.MovementTypeR\x06remove\x125\n" +
	"\x03add\x18\x03 \x03(\x0e2#.creatures.v1.Creature.MovementTypeR\x03add\x1a\xa4\x01\n" +
	"\x14ModifyCreatureMorale\x12:\n" +
	"\x06filter\x18\x01 \x01(\v2\".creatures.v1.Creature.Kind.FilterR\x06filter\x12P\n" +
	"\fmodification\x18\x02 \x01(\v2,.creatures.v1.Creature.AttributeModificationR\fmodification\x1a\xa2\x01\n" +
	"\x12ModifyCreatureLuck\x12:\n" +
	"\x06filter\x18\x01 \x01(\v2\".creatures.v1.Creature.Kind.FilterR\x06filter\x12P\n" +
	"\fmodification\x18\x02 \x01(\v2,.creatures.v1.Creature.AttributeModificationR\fmodification\x1a\xa4\x01\n" +
	"\x14ModifyCreatureAttack\x12:\n" +
	"\x06filter\x18\x01 \x01(\v2\".creatures.v1.Creature.Kind.FilterR\x06filter\x12P\n" +
	"\fmodification\x18\x02 \x01(\v2,.creatures.v1.Creature.AttributeModificationR\fmodification\x1a\xa5\x01\n" +
	"\x15ModifyCreatureDefence\x12:\n" +
	"\x06filter\x18\x01 \x01(\v2\".creatures.v1.Creature.Kind.FilterR\x06filter\x12P\n" +
	"\fmodification\x18\x02 \x01(\v2,.creatures.v1.Creature.AttributeModificationR\fmodification\x1a\xa3\x01\n" +
	"\x13ModifyCreatureSpeed\x12:\n" +
	"\x06filter\x18\x01 \x01(\v2\".creatures.v1.Creature.Kind.FilterR\x06filter\x12P\n" +
	"\fmodification\x18\x02 \x01(\v2,.creatures.v1.Creature.AttributeModificationR\fmodificationB\x06\n" +
	"\x04kind\x1aH\n" +
	"\rRenderingSpec\x12\x1d\n" +
	"\n" +
	"class_name\x18\x01 \x01(\tR\tclassName\x12\x18\n" +
	"\atexture\x18\x02 \x01(\tR\atexture\"\x9b\x01\n" +
	"\fMovementType\x12\x1d\n" +
	"\x19MOVEMENT_TYPE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15MOVEMENT_TYPE_WALKING\x10\x01\x12\x1a\n" +
	"\x16MOVEMENT_TYPE_SWIMMING\x10\x02\x12\x18\n" +
	"\x14MOVEMENT_TYPE_FLYING\x10\x03\x12\x1b\n" +
	"\x17MOVEMENT_TYPE_PORTALING\x10\x04B|\n" +
	"\n" +
	"com.map.v1B\fTerrainProtoP\x01Z'github.com/openhexes/proto/map/v1;mapv1\xa2\x02\x03MXX\xaa\x02\x06Map.V1\xca\x02\x06Map\\V1\xe2\x02\x12Map\\V1\\GPBMetadata\xea\x02\aMap::V1b\x06proto3"

var (
	file_map_v1_terrain_proto_rawDescOnce sync.Once
	file_map_v1_terrain_proto_rawDescData []byte
)

func file_map_v1_terrain_proto_rawDescGZIP() []byte {
	file_map_v1_terrain_proto_rawDescOnce.Do(func() {
		file_map_v1_terrain_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_map_v1_terrain_proto_rawDesc), len(file_map_v1_terrain_proto_rawDesc)))
	})
	return file_map_v1_terrain_proto_rawDescData
}

var file_map_v1_terrain_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_map_v1_terrain_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_map_v1_terrain_proto_goTypes = []any{
	(Terrain_MovementType)(0),                          // 0: map.v1.Terrain.MovementType
	(*Terrain)(nil),                                    // 1: map.v1.Terrain
	(*Terrain_Effect)(nil),                             // 2: map.v1.Terrain.Effect
	(*Terrain_RenderingSpec)(nil),                      // 3: map.v1.Terrain.RenderingSpec
	(*Terrain_Effect_ModifySpellLevel)(nil),            // 4: map.v1.Terrain.Effect.ModifySpellLevel
	(*Terrain_Effect_PreventSpellCasting)(nil),         // 5: map.v1.Terrain.Effect.PreventSpellCasting
	(*Terrain_Effect_DisableNativeTerrainBonuses)(nil), // 6: map.v1.Terrain.Effect.DisableNativeTerrainBonuses
	(*Terrain_Effect_ModifyCreatureMovementType)(nil),  // 7: map.v1.Terrain.Effect.ModifyCreatureMovementType
	(*Terrain_Effect_ModifyCreatureMorale)(nil),        // 8: map.v1.Terrain.Effect.ModifyCreatureMorale
	(*Terrain_Effect_ModifyCreatureLuck)(nil),          // 9: map.v1.Terrain.Effect.ModifyCreatureLuck
	(*Terrain_Effect_ModifyCreatureAttack)(nil),        // 10: map.v1.Terrain.Effect.ModifyCreatureAttack
	(*Terrain_Effect_ModifyCreatureDefence)(nil),       // 11: map.v1.Terrain.Effect.ModifyCreatureDefence
	(*Terrain_Effect_ModifyCreatureSpeed)(nil),         // 12: map.v1.Terrain.Effect.ModifyCreatureSpeed
	(*v1.Spell_Filter)(nil),                            // 13: magic.v1.Spell.Filter
	(*v11.Creature_Kind_Filter)(nil),                   // 14: creatures.v1.Creature.Kind.Filter
	(v11.Creature_MovementType)(0),                     // 15: creatures.v1.Creature.MovementType
	(*v11.Creature_AttributeModification)(nil),         // 16: creatures.v1.Creature.AttributeModification
}
var file_map_v1_terrain_proto_depIdxs = []int32{
	0,  // 0: map.v1.Terrain.passable_with:type_name -> map.v1.Terrain.MovementType
	2,  // 1: map.v1.Terrain.effects:type_name -> map.v1.Terrain.Effect
	3,  // 2: map.v1.Terrain.rendering_spec:type_name -> map.v1.Terrain.RenderingSpec
	4,  // 3: map.v1.Terrain.Effect.modify_spell_level:type_name -> map.v1.Terrain.Effect.ModifySpellLevel
	5,  // 4: map.v1.Terrain.Effect.prevent_spell_casting:type_name -> map.v1.Terrain.Effect.PreventSpellCasting
	6,  // 5: map.v1.Terrain.Effect.disable_native_terrain_bonuses:type_name -> map.v1.Terrain.Effect.DisableNativeTerrainBonuses
	7,  // 6: map.v1.Terrain.Effect.modify_creature_movement_type:type_name -> map.v1.Terrain.Effect.ModifyCreatureMovementType
	8,  // 7: map.v1.Terrain.Effect.modify_creature_morale:type_name -> map.v1.Terrain.Effect.ModifyCreatureMorale
	9,  // 8: map.v1.Terrain.Effect.modify_creature_luck:type_name -> map.v1.Terrain.Effect.ModifyCreatureLuck
	10, // 9: map.v1.Terrain.Effect.modify_creature_attack:type_name -> map.v1.Terrain.Effect.ModifyCreatureAttack
	11, // 10: map.v1.Terrain.Effect.modify_creature_defence:type_name -> map.v1.Terrain.Effect.ModifyCreatureDefence
	12, // 11: map.v1.Terrain.Effect.modify_creature_speed:type_name -> map.v1.Terrain.Effect.ModifyCreatureSpeed
	13, // 12: map.v1.Terrain.Effect.ModifySpellLevel.filter:type_name -> magic.v1.Spell.Filter
	13, // 13: map.v1.Terrain.Effect.PreventSpellCasting.filter:type_name -> magic.v1.Spell.Filter
	14, // 14: map.v1.Terrain.Effect.ModifyCreatureMovementType.filter:type_name -> creatures.v1.Creature.Kind.Filter
	15, // 15: map.v1.Terrain.Effect.ModifyCreatureMovementType.remove:type_name -> creatures.v1.Creature.MovementType
	15, // 16: map.v1.Terrain.Effect.ModifyCreatureMovementType.add:type_name -> creatures.v1.Creature.MovementType
	14, // 17: map.v1.Terrain.Effect.ModifyCreatureMorale.filter:type_name -> creatures.v1.Creature.Kind.Filter
	16, // 18: map.v1.Terrain.Effect.ModifyCreatureMorale.modification:type_name -> creatures.v1.Creature.AttributeModification
	14, // 19: map.v1.Terrain.Effect.ModifyCreatureLuck.filter:type_name -> creatures.v1.Creature.Kind.Filter
	16, // 20: map.v1.Terrain.Effect.ModifyCreatureLuck.modification:type_name -> creatures.v1.Creature.AttributeModification
	14, // 21: map.v1.Terrain.Effect.ModifyCreatureAttack.filter:type_name -> creatures.v1.Creature.Kind.Filter
	16, // 22: map.v1.Terrain.Effect.ModifyCreatureAttack.modification:type_name -> creatures.v1.Creature.AttributeModification
	14, // 23: map.v1.Terrain.Effect.ModifyCreatureDefence.filter:type_name -> creatures.v1.Creature.Kind.Filter
	16, // 24: map.v1.Terrain.Effect.ModifyCreatureDefence.modification:type_name -> creatures.v1.Creature.AttributeModification
	14, // 25: map.v1.Terrain.Effect.ModifyCreatureSpeed.filter:type_name -> creatures.v1.Creature.Kind.Filter
	16, // 26: map.v1.Terrain.Effect.ModifyCreatureSpeed.modification:type_name -> creatures.v1.Creature.AttributeModification
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_map_v1_terrain_proto_init() }
func file_map_v1_terrain_proto_init() {
	if File_map_v1_terrain_proto != nil {
		return
	}
	file_map_v1_terrain_proto_msgTypes[1].OneofWrappers = []any{
		(*Terrain_Effect_ModifySpellLevel_)(nil),
		(*Terrain_Effect_PreventSpellCasting_)(nil),
		(*Terrain_Effect_DisableNativeTerrainBonuses_)(nil),
		(*Terrain_Effect_ModifyCreatureMovementType_)(nil),
		(*Terrain_Effect_ModifyCreatureMorale_)(nil),
		(*Terrain_Effect_ModifyCreatureLuck_)(nil),
		(*Terrain_Effect_ModifyCreatureAttack_)(nil),
		(*Terrain_Effect_ModifyCreatureDefence_)(nil),
		(*Terrain_Effect_ModifyCreatureSpeed_)(nil),
	}
	file_map_v1_terrain_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_map_v1_terrain_proto_rawDesc), len(file_map_v1_terrain_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_map_v1_terrain_proto_goTypes,
		DependencyIndexes: file_map_v1_terrain_proto_depIdxs,
		EnumInfos:         file_map_v1_terrain_proto_enumTypes,
		MessageInfos:      file_map_v1_terrain_proto_msgTypes,
	}.Build()
	File_map_v1_terrain_proto = out.File
	file_map_v1_terrain_proto_goTypes = nil
	file_map_v1_terrain_proto_depIdxs = nil
}

// @generated by protoc-gen-es v2.6.3
// @generated from file game/v1/game.proto (package game.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Grid } from "../../map/v1/tile_pb";
import type { Progress } from "../../progress/v1/progress_pb";

/**
 * Describes the file game/v1/game.proto.
 */
export declare const file_game_v1_game: GenFile;

/**
 * @generated from message game.v1.GetSampleGridRequest
 */
export declare type GetSampleGridRequest = Message<"game.v1.GetSampleGridRequest"> & {
  /**
   * @generated from field: uint32 total_rows = 1;
   */
  totalRows: number;

  /**
   * @generated from field: uint32 total_columns = 2;
   */
  totalColumns: number;

  /**
   * @generated from field: uint32 max_rows_per_segment = 3;
   */
  maxRowsPerSegment: number;

  /**
   * @generated from field: uint32 max_columns_per_segment = 4;
   */
  maxColumnsPerSegment: number;
};

/**
 * Describes the message game.v1.GetSampleGridRequest.
 * Use `create(GetSampleGridRequestSchema)` to create a new message.
 */
export declare const GetSampleGridRequestSchema: GenMessage<GetSampleGridRequest>;

/**
 * @generated from message game.v1.GetSampleGridResponse
 */
export declare type GetSampleGridResponse = Message<"game.v1.GetSampleGridResponse"> & {
  /**
   * may be partial, containing a subset of segment rows
   *
   * @generated from field: map.v1.Grid grid = 1;
   */
  grid?: Grid;

  /**
   * @generated from field: progress.v1.Progress progress = 2;
   */
  progress?: Progress;
};

/**
 * Describes the message game.v1.GetSampleGridResponse.
 * Use `create(GetSampleGridResponseSchema)` to create a new message.
 */
export declare const GetSampleGridResponseSchema: GenMessage<GetSampleGridResponse>;

/**
 * @generated from service game.v1.GameService
 */
export declare const GameService: GenService<{
  /**
   * @generated from rpc game.v1.GameService.GetSampleGrid
   */
  getSampleGrid: {
    methodKind: "server_streaming";
    input: typeof GetSampleGridRequestSchema;
    output: typeof GetSampleGridResponseSchema;
  },
}>;


// @generated by protoc-gen-es v2.6.3
// @generated from file iam/v1/iam.proto (package iam.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file iam/v1/iam.proto.
 */
export declare const file_iam_v1_iam: GenFile;

/**
 * @generated from message iam.v1.Account
 */
export declare type Account = Message<"iam.v1.Account"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: iam.v1.Account.Meta meta = 2;
   */
  meta?: Account_Meta;

  /**
   * @generated from field: string email = 3;
   */
  email: string;

  /**
   * @generated from field: repeated string roles = 4;
   */
  roles: string[];
};

/**
 * Describes the message iam.v1.Account.
 * Use `create(AccountSchema)` to create a new message.
 */
export declare const AccountSchema: GenMessage<Account>;

/**
 * @generated from message iam.v1.Account.Meta
 */
export declare type Account_Meta = Message<"iam.v1.Account.Meta"> & {
  /**
   * @generated from field: bool active = 1;
   */
  active: boolean;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: string display_name = 3;
   */
  displayName: string;

  /**
   * @generated from field: string picture = 4;
   */
  picture: string;
};

/**
 * Describes the message iam.v1.Account.Meta.
 * Use `create(Account_MetaSchema)` to create a new message.
 */
export declare const Account_MetaSchema: GenMessage<Account_Meta>;

/**
 * @generated from message iam.v1.ResolveAccountRequest
 */
export declare type ResolveAccountRequest = Message<"iam.v1.ResolveAccountRequest"> & {
};

/**
 * Describes the message iam.v1.ResolveAccountRequest.
 * Use `create(ResolveAccountRequestSchema)` to create a new message.
 */
export declare const ResolveAccountRequestSchema: GenMessage<ResolveAccountRequest>;

/**
 * @generated from message iam.v1.ResolveAccountResponse
 */
export declare type ResolveAccountResponse = Message<"iam.v1.ResolveAccountResponse"> & {
  /**
   * @generated from field: iam.v1.Account account = 1;
   */
  account?: Account;
};

/**
 * Describes the message iam.v1.ResolveAccountResponse.
 * Use `create(ResolveAccountResponseSchema)` to create a new message.
 */
export declare const ResolveAccountResponseSchema: GenMessage<ResolveAccountResponse>;

/**
 * @generated from message iam.v1.ListAccountsRequest
 */
export declare type ListAccountsRequest = Message<"iam.v1.ListAccountsRequest"> & {
  /**
   * @generated from field: optional bool active = 1;
   */
  active?: boolean;
};

/**
 * Describes the message iam.v1.ListAccountsRequest.
 * Use `create(ListAccountsRequestSchema)` to create a new message.
 */
export declare const ListAccountsRequestSchema: GenMessage<ListAccountsRequest>;

/**
 * @generated from message iam.v1.ListAccountsResponse
 */
export declare type ListAccountsResponse = Message<"iam.v1.ListAccountsResponse"> & {
  /**
   * @generated from field: repeated iam.v1.Account accounts = 1;
   */
  accounts: Account[];
};

/**
 * Describes the message iam.v1.ListAccountsResponse.
 * Use `create(ListAccountsResponseSchema)` to create a new message.
 */
export declare const ListAccountsResponseSchema: GenMessage<ListAccountsResponse>;

/**
 * @generated from message iam.v1.GetAccountRequest
 */
export declare type GetAccountRequest = Message<"iam.v1.GetAccountRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: bool with_roles = 2;
   */
  withRoles: boolean;
};

/**
 * Describes the message iam.v1.GetAccountRequest.
 * Use `create(GetAccountRequestSchema)` to create a new message.
 */
export declare const GetAccountRequestSchema: GenMessage<GetAccountRequest>;

/**
 * @generated from message iam.v1.GetAccountResponse
 */
export declare type GetAccountResponse = Message<"iam.v1.GetAccountResponse"> & {
  /**
   * @generated from field: iam.v1.Account account = 1;
   */
  account?: Account;
};

/**
 * Describes the message iam.v1.GetAccountResponse.
 * Use `create(GetAccountResponseSchema)` to create a new message.
 */
export declare const GetAccountResponseSchema: GenMessage<GetAccountResponse>;

/**
 * @generated from message iam.v1.UpdateAccountActivationRequest
 */
export declare type UpdateAccountActivationRequest = Message<"iam.v1.UpdateAccountActivationRequest"> & {
  /**
   * @generated from field: map<string, bool> id_to_activation = 1;
   */
  idToActivation: { [key: string]: boolean };
};

/**
 * Describes the message iam.v1.UpdateAccountActivationRequest.
 * Use `create(UpdateAccountActivationRequestSchema)` to create a new message.
 */
export declare const UpdateAccountActivationRequestSchema: GenMessage<UpdateAccountActivationRequest>;

/**
 * @generated from message iam.v1.UpdateAccountActivationResponse
 */
export declare type UpdateAccountActivationResponse = Message<"iam.v1.UpdateAccountActivationResponse"> & {
};

/**
 * Describes the message iam.v1.UpdateAccountActivationResponse.
 * Use `create(UpdateAccountActivationResponseSchema)` to create a new message.
 */
export declare const UpdateAccountActivationResponseSchema: GenMessage<UpdateAccountActivationResponse>;

/**
 * @generated from service iam.v1.IAMService
 */
export declare const IAMService: GenService<{
  /**
   * @generated from rpc iam.v1.IAMService.ResolveAccount
   */
  resolveAccount: {
    methodKind: "unary";
    input: typeof ResolveAccountRequestSchema;
    output: typeof ResolveAccountResponseSchema;
  },
  /**
   * @generated from rpc iam.v1.IAMService.ListAccounts
   */
  listAccounts: {
    methodKind: "server_streaming";
    input: typeof ListAccountsRequestSchema;
    output: typeof ListAccountsResponseSchema;
  },
  /**
   * @generated from rpc iam.v1.IAMService.GetAccount
   */
  getAccount: {
    methodKind: "unary";
    input: typeof GetAccountRequestSchema;
    output: typeof GetAccountResponseSchema;
  },
  /**
   * @generated from rpc iam.v1.IAMService.UpdateAccountActivation
   */
  updateAccountActivation: {
    methodKind: "unary";
    input: typeof UpdateAccountActivationRequestSchema;
    output: typeof UpdateAccountActivationResponseSchema;
  },
}>;


// @generated by protoc-gen-es v2.6.3
// @generated from file map/v1/tile.proto (package map.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { CornerDirection, EdgeDirection } from "./compass_pb";

/**
 * Describes the file map/v1/tile.proto.
 */
export declare const file_map_v1_tile: GenFile;

/**
 * @generated from message map.v1.Tile
 */
export declare type Tile = Message<"map.v1.Tile"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: map.v1.Tile.Coordinate coordinate = 2;
   */
  coordinate?: Tile_Coordinate;

  /**
   * @generated from field: string terrain_id = 3;
   */
  terrainId: string;

  /**
   * @generated from field: map.v1.Tile.RenderingSpec rendering_spec = 4;
   */
  renderingSpec?: Tile_RenderingSpec;
};

/**
 * Describes the message map.v1.Tile.
 * Use `create(TileSchema)` to create a new message.
 */
export declare const TileSchema: GenMessage<Tile>;

/**
 * @generated from message map.v1.Tile.Coordinate
 */
export declare type Tile_Coordinate = Message<"map.v1.Tile.Coordinate"> & {
  /**
   * @generated from field: uint32 row = 1;
   */
  row: number;

  /**
   * @generated from field: uint32 column = 2;
   */
  column: number;

  /**
   * @generated from field: uint32 depth = 3;
   */
  depth: number;
};

/**
 * Describes the message map.v1.Tile.Coordinate.
 * Use `create(Tile_CoordinateSchema)` to create a new message.
 */
export declare const Tile_CoordinateSchema: GenMessage<Tile_Coordinate>;

/**
 * @generated from message map.v1.Tile.Edge
 */
export declare type Tile_Edge = Message<"map.v1.Tile.Edge"> & {
  /**
   * @generated from field: map.v1.EdgeDirection direction = 1;
   */
  direction: EdgeDirection;

  /**
   * @generated from field: string neighbour_terrain_id = 2;
   */
  neighbourTerrainId: string;
};

/**
 * Describes the message map.v1.Tile.Edge.
 * Use `create(Tile_EdgeSchema)` to create a new message.
 */
export declare const Tile_EdgeSchema: GenMessage<Tile_Edge>;

/**
 * @generated from message map.v1.Tile.Corner
 */
export declare type Tile_Corner = Message<"map.v1.Tile.Corner"> & {
  /**
   * @generated from field: map.v1.CornerDirection direction = 1;
   */
  direction: CornerDirection;

  /**
   * @generated from field: map<int32, map.v1.Tile.Edge> edges = 2;
   */
  edges: { [key: number]: Tile_Edge };
};

/**
 * Describes the message map.v1.Tile.Corner.
 * Use `create(Tile_CornerSchema)` to create a new message.
 */
export declare const Tile_CornerSchema: GenMessage<Tile_Corner>;

/**
 * @generated from message map.v1.Tile.RenderingSpec
 */
export declare type Tile_RenderingSpec = Message<"map.v1.Tile.RenderingSpec"> & {
  /**
   * @generated from field: map<int32, map.v1.Tile.Edge> edges = 1;
   */
  edges: { [key: number]: Tile_Edge };

  /**
   * @generated from field: map<int32, map.v1.Tile.Corner> corners = 2;
   */
  corners: { [key: number]: Tile_Corner };

  /**
   * landscape features, e.g. trees, rocks, etc.
   *
   * @generated from field: repeated string feature_ids = 3;
   */
  featureIds: string[];
};

/**
 * Describes the message map.v1.Tile.RenderingSpec.
 * Use `create(Tile_RenderingSpecSchema)` to create a new message.
 */
export declare const Tile_RenderingSpecSchema: GenMessage<Tile_RenderingSpec>;

/**
 * @generated from message map.v1.Segment
 */
export declare type Segment = Message<"map.v1.Segment"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: map.v1.Segment.Bounds bounds = 2;
   */
  bounds?: Segment_Bounds;

  /**
   * @generated from field: repeated map.v1.Tile tiles = 3;
   */
  tiles: Tile[];

  /**
   * @generated from field: map.v1.Segment.RenderingSpec rendering_spec = 4;
   */
  renderingSpec?: Segment_RenderingSpec;
};

/**
 * Describes the message map.v1.Segment.
 * Use `create(SegmentSchema)` to create a new message.
 */
export declare const SegmentSchema: GenMessage<Segment>;

/**
 * @generated from message map.v1.Segment.Bounds
 */
export declare type Segment_Bounds = Message<"map.v1.Segment.Bounds"> & {
  /**
   * @generated from field: uint32 depth = 1;
   */
  depth: number;

  /**
   * @generated from field: int32 min_row = 2;
   */
  minRow: number;

  /**
   * @generated from field: int32 max_row = 3;
   */
  maxRow: number;

  /**
   * @generated from field: int32 min_column = 4;
   */
  minColumn: number;

  /**
   * @generated from field: int32 max_column = 5;
   */
  maxColumn: number;
};

/**
 * Describes the message map.v1.Segment.Bounds.
 * Use `create(Segment_BoundsSchema)` to create a new message.
 */
export declare const Segment_BoundsSchema: GenMessage<Segment_Bounds>;

/**
 * @generated from message map.v1.Segment.RenderingSpec
 */
export declare type Segment_RenderingSpec = Message<"map.v1.Segment.RenderingSpec"> & {
  /**
   * @generated from field: string svg = 1;
   */
  svg: string;

  /**
   * Simplified SVG for fullscreen view without edges, corners, and patterns
   *
   * @generated from field: string svg_lightweight = 2;
   */
  svgLightweight: string;

  /**
   * Rasterized WebP image data for performance
   *
   * @generated from field: bytes webp = 3;
   */
  webp: Uint8Array;

  /**
   * Simplified WebP for fullscreen view
   *
   * @generated from field: bytes webp_lightweight = 4;
   */
  webpLightweight: Uint8Array;
};

/**
 * Describes the message map.v1.Segment.RenderingSpec.
 * Use `create(Segment_RenderingSpecSchema)` to create a new message.
 */
export declare const Segment_RenderingSpecSchema: GenMessage<Segment_RenderingSpec>;

/**
 * @generated from message map.v1.Segment.Row
 */
export declare type Segment_Row = Message<"map.v1.Segment.Row"> & {
  /**
   * @generated from field: repeated map.v1.Segment segments = 1;
   */
  segments: Segment[];
};

/**
 * Describes the message map.v1.Segment.Row.
 * Use `create(Segment_RowSchema)` to create a new message.
 */
export declare const Segment_RowSchema: GenMessage<Segment_Row>;

/**
 * @generated from message map.v1.Layer
 */
export declare type Layer = Message<"map.v1.Layer"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: uint32 depth = 2;
   */
  depth: number;

  /**
   * @generated from field: uint32 total_rows = 3;
   */
  totalRows: number;

  /**
   * @generated from field: uint32 total_columns = 4;
   */
  totalColumns: number;

  /**
   * @generated from field: repeated map.v1.Segment.Row segment_rows = 5;
   */
  segmentRows: Segment_Row[];
};

/**
 * Describes the message map.v1.Layer.
 * Use `create(LayerSchema)` to create a new message.
 */
export declare const LayerSchema: GenMessage<Layer>;

